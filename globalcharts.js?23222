var GlobalCharts = function() {

    var handleGlobalCharts = function() {

        var symbol = '';
        function pf_large_number() {
            return this.series.name + ': <b>' + symbol + format_large_number(this.y).replace('&nbsp;', ' ') + '</b>';
        }

        function pf_percent() {
            return this.series.name + ': <b>' + Math.round(this.y) + '%</b>';
        }

        function percent_label() {
            var v = this.value;
            if (v > 0) {
                return '+' + v + '%';
            }
            return v + '%';
        }

        function drawCharts() {

            var sankey_options = {
                title: {
                    text: null,
                },
                credits: false,
                tooltip: {
                    useHTML: true,
                    formatter: function() {
                        if (this.point.from != undefined && this.point.to != undefined &&
                            this.point.weight != undefined) {
                            return this.point.from + ' &harr; ' + this.point.to + ': ' + Settings.prefShortSymbol +
                                format_large_number(this.point.weight);
                        }
                        return this.point.id;
                    }
                },
                series: [{
                    keys: ['from', 'to', 'weight'],
                    type: 'sankey',
                    nodePadding: 12,
                    curveFactor: 0.64,
                    dataLabels: {
                        style: {
                            textOutline: false,
                            fontSize: '12px',
                            color: '#ffffff',
                            fill: '#ffffff',
                        }
                    },
                }]
            };

            var money_flow_options = clone(sankey_options);
            money_flow_options.series[0].data = JSON.parse(
                atob($('#money_flow').attr('values')));
            Highcharts.chart('money_flow', money_flow_options);

            var crypto_flow_options = clone(sankey_options);
            crypto_flow_options.series[0].data = JSON.parse(
                atob($('#crypto_flow').attr('values')));
            crypto_flow_options.series[0].nodePadding = 15;
            crypto_flow_options.series[0].curveFactor= 0.44;
            Highcharts.chart('crypto_flow', crypto_flow_options);

            Highcharts.setOptions({
                lang: {
                    numericSymbols: ['k' , 'M' , 'B' , 'T' , 'P' , 'E']
                }
            });
            var tmc_options = {
                custom_label: null,
                chart: {
                    type: 'area',
                    backgroundColor: undefined,
                    spacing: [10, 5, 10, 5],
                    zoomType: 'x',
                    pinchType: 'none',
                    events: {
                        load: function() {
                            GlobalCharts.tmc_label = this.renderer.label(
                                '', 7, 40, null, null, null, true).css({fontSize: '0.8em'}).add();
                            updateGraphCustomLabels(GlobalCharts.tmc_label, this, symbol, '', format_large_number);
                        }
                    }
                },
                plotOptions: {
                    series: {
                        fillOpacity: 0.5,
                        lineWidth: 1,
                        alignTicks: false,
                        startOnTick: false,
                        endOnTick: false,
                        stacking: null,
                        pointInterval: 24 * 3600 * 1000
                    }
                },
                xAxis: {
                    type: 'datetime',
                    gridLineWidth: 0,
                    events: {
                        afterSetExtremes: function() {
                            updateGraphCustomLabels(GlobalCharts.tmc_label, this.chart, symbol, '', format_large_number);
                        }
                    }
                },
                yAxis: {
                    title: {text: undefined},
                    tickLength: 0,
                    gridLineColor: 'rgba(200, 200, 200, 0.1)',
                },
                title: {text: undefined},
                tooltip: {
                    split: false,
                    dateTimeLabelFormats: {
                        day: '%e %b %Y'
                    },
                    pointFormatter: pf_large_number,
                    backgroundColor: 'rgba(247,247,247,1)',
                },
                rangeSelector: {
                    inputEnabled: false,
                    selected: 4,
                    buttons: [{
                        type: 'day',
                        count: 7,
                        text: '7d'
                    }, {
                        type: 'month',
                        count: 1,
                        text: '1m'
                    }, {
                        type: 'month',
                        count: 3,
                        text: '3m'
                    }, {
                        type: 'month',
                        count: 6,
                        text: '6m'
                    }, {
                        type: 'year',
                        count: 1,
                        text: '1y'
                    }, {
                        type: 'all',
                        text: 'All'
                    }]
                },
                legend: {
                    enabled: true,
                    margin: 2
                },
                credits: false,
                navigator: {enabled: false},
                scrollbar: {enabled: false},
                series: JSON.parse(atob($('#total_mcap').attr('values')))
            }
            var extra = atob($('#total_mcap').attr('extra'));
            if (extra) {
                eval(extra);
            }
            var ch = new Highcharts.stockChart('total_mcap', tmc_options);

            var btc_dom_options = {
                chart: {
                    type: 'area',
                    backgroundColor: undefined,
                    spacing: [10, 5, 10, 5],
                    zoomType: 'x',
                    pinchType: 'none',
                    events: {
                        load: function() {
                            GlobalCharts.btc_label = this.renderer.label(
                                '', 7, 40, null, null, null, true).css({fontSize: '0.8em'}).add();
                            updateGraphCustomLabels(GlobalCharts.btc_label, this, '', '%');
                        }
                    }
                },
                plotOptions: {
                    series: {
                        fillOpacity: 0.2,
                        lineWidth: 1,
                        pointInterval: 24 * 3600 * 1000
                    }
                },
                xAxis: {
                    type: 'datetime',
                    gridLineWidth: 0,
                    events: {
                        afterSetExtremes: function() {
                            updateGraphCustomLabels(GlobalCharts.btc_label, this.chart, '', '%');
                        }
                    }
                },
                yAxis: {
                    title: {text: undefined},
                    tickLength: 0,
                    gridLineColor: 'rgba(200, 200, 200, 0.1)',
                    showLastLabel: true
                },
                title: {text: undefined},
                tooltip: {
                    split: false,
                    dateTimeLabelFormats: {
                        day: '%e %b %Y'
                    },
                    pointFormatter: pf_percent
                },
                rangeSelector: {
                    inputEnabled: false,
                    selected: 4,
                    buttons: [{
                        type: 'day',
                        count: 7,
                        text: '7d'
                    }, {
                        type: 'month',
                        count: 1,
                        text: '1m'
                    }, {
                        type: 'month',
                        count: 3,
                        text: '3m'
                    }, {
                        type: 'month',
                        count: 6,
                        text: '6m'
                    }, {
                        type: 'year',
                        count: 1,
                        text: '1y'
                    }, {
                        type: 'all',
                        text: 'All'
                    }]
                },
                legend: {
                    enabled: true,
                    margin: 2
                },
                credits: false,
                navigator: {enabled: false},
                scrollbar: {enabled: false},
                series: JSON.parse(atob($('#btc_dom').attr('values')))
            }
            var extra = atob($('#btc_dom').attr('extra'));
            if (extra) {
                eval(extra);
            }
            var ch = new Highcharts.stockChart('btc_dom', btc_dom_options);

            var tvol_options = clone(tmc_options);
            tvol_options.chart.events = {
                load: function() {
                    GlobalCharts.tvol_label = this.renderer.label(
                        '', 7, 40, null, null, null, true).css({fontSize: '0.8em'}).add();
                    updateGraphCustomLabels(GlobalCharts.tvol_label, this, symbol, '', format_large_number);
                }
            };
            tvol_options.xAxis = {
                type: 'datetime',
                gridLineWidth: 0,
                events: {
                    afterSetExtremes: function() {
                        updateGraphCustomLabels(GlobalCharts.tvol_label, this.chart, symbol, '', format_large_number);
                    }
                }
            };
            tvol_options.series = JSON.parse(atob($('#total_vol').attr('values')));
            var extra = atob($('#total_vol').attr('extra'));
            if (extra) {
                eval(extra);
            }
            var ch = new Highcharts.stockChart('total_vol', tvol_options);

            var treemap_mcap_options = {
                title: {text: undefined},
                credits: false,
                plotOptions: {
                    treemap: {
                        colorByPoint: true
                    }
                },
                series: [{
                    type: 'treemap',
                    layoutAlgorithm: 'squarified',
                    data: JSON.parse(atob($('#treemap_mcap').attr('values'))),
                    dataLabels: {
                        style: {
                            textOutline: false,
                            fontSize: '16px',
                            color: '#ffffff',
                            fill: '#ffffff',
                        }
                    },
                }],
                tooltip: {
                    formatter: function() {
                        var s = this.point.options.name + ' [' + this.point.options.symbol + ']<br>';
                        s += '<b>' + symbol + format_large_number(this.point.options.value).replace('&nbsp;', ' ') + '</b> ';
                        s += '(' + Math.round(this.point.options.percent * 100) + '%)';
                        return s;
                    }
                },
            }
            var ch = new Highcharts.chart('treemap_mcap', treemap_mcap_options);

            var treemap_vol24_options = clone(treemap_mcap_options);
            treemap_vol24_options.series[0].data = JSON.parse(atob($('#treemap_vol24').attr('values')));
            var ch = new Highcharts.chart('treemap_vol24', treemap_vol24_options);

        }

        drawCharts();

    }

    return {
        init: function() {
            handleGlobalCharts();
        }
    };
}();
